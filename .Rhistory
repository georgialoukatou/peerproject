annotations_NAsfrench <- subset(dataf, is.na(dataf$annotation1)) # 528
french<-subset(french, !(french$annotation1=="?"))
french<-french[!is.na(french$annotation1), ]
total_french<-nrow(french) #18884
aggregate(french$utterance_id,by=list(french$annotation1,  french$speaker, french$keychild),FUN=length )->sum_french_addressee
colnames(sum_french_addressee) <- c("addresse", "speaker", "keychild", "nb_utt")
#matches addressee with speaker roles (especially for non-child directed)
speaker_info_french<- as.data.frame(unique(french %>%select(speaker_id, speaker_role_raw)))
colnames(speaker_info_french)[colnames(speaker_info_french)=="speaker_role_raw"] <- "role_adressee"
merged_speaker_info_french<-french
merged_speaker_info_french$role_adressee <- NA
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("MIX")] <- "Mix"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("A", "FRI", "AUN", "UNC", "FAT")] <- "Adult"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 == "1"] <- "Keychild"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("DOG", "PET")] <- "Animals"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("SELF")] <- "Self"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("MOT")] <- "Mother"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("TOY")] <- "Toy"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("OBS", "CAM", "INV", "INV ")] <- "Investigator"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("TEL", "TELEPHONE")] <- "Telephone"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("BOY", "COU", "SIS", "BR1", "BRO","O","O " )] <- "Other child"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("TOINE", "COLLIN", "N", "", "? ")] <- "unidentified"
summary(as.factor(merged_speaker_info_french$role_adressee))
merged_speaker_info_french<-subset(merged_speaker_info_french, !(merged_speaker_info_french$role_adressee=="Investigator"))
merged_speaker_info_french<-subset(merged_speaker_info_french, !(merged_speaker_info_french$role_adressee=="Unknown"))
french_adult_directed<-subset(merged_speaker_info_french, (merged_speaker_info_french$role_adressee=="Adult"|merged_speaker_info_french$annotation1=="Mother"))
# Utterances addressed to others - children
french_otherchild_directed<-subset(merged_speaker_info_french, (merged_speaker_info_french$role_adressee=="Other child"))
# Utterances addressed to keychild
french_keychild_directed<-subset(merged_speaker_info_french, (merged_speaker_info_french$role_adressee=="Keychild"))
# Utterances addressed to unclassified
french_unclassified_directed<-subset(merged_speaker_info_french, (merged_speaker_info_french$role_adressee=="Animals"| merged_speaker_info_french$role_adressee=="Mix"|merged_speaker_info_french$role_adressee=="Telephone"| merged_speaker_info_french$role_adressee=="Self"| merged_speaker_info_french$role_adressee=="Toy"| merged_speaker_info_french$role_adressee=="unidentified"))
french_investigator_directed<-subset(merged_speaker_info_french, (merged_speaker_info_french$role_adressee=="Investigator"))
#Register columns
merged_speaker_info_french$register <- NA
merged_speaker_info_french$register[merged_speaker_info_french$role_adressee == "Mother"] <- "ADS"
merged_speaker_info_french$register[merged_speaker_info_french$role_adressee == "Investigator"] <- "Investigator"
merged_speaker_info_french$register[grep("Other child", merged_speaker_info_french$role_adressee)]  <- "OCDS"
merged_speaker_info_french$register[grep("Adult", merged_speaker_info_french$role_adressee)]  <- "ADS"
merged_speaker_info_french$register[grep("Keychild", merged_speaker_info_french$role_adressee)] <- "CDS"
merged_speaker_info_french$register[grep("Animals|Mix|Unknown|Self|Telephone|Toy|unidentified", merged_speaker_info_french$role_adressee)]  <- "unclassified"
#Aggregate by register
aggregate(merged_speaker_info_french$utterance_id,by=list(merged_speaker_info_french$register,  merged_speaker_info_french$keychild, merged_speaker_info_french$session_id),FUN=length )->sum_french_register
colnames(sum_french_register) <- c("register", "keychild", "session", "nb_utt")
#subset all utterances marked as ADS & OCDS
french_ad_directed_utts<- as.data.frame(french_adult_directed %>%select(utterance))
french_oc_directed_utts<- as.data.frame(french_otherchild_directed %>%select(utterance))
french_c_directed_utts<- as.data.frame(french_keychild_directed %>%select(utterance))
length(french_adult_directed$utterance)/total_french *100 #0.39
length(french_otherchild_directed$utterance)/total_french *100 #4.2
###Average per speaker and register
total_reg<-aggregate(sum_french_register$nb_utt, by=list(sum_french_register$session), FUN=sum)
names(total_reg)<-c("session", "total")
sum_french_register<-merge(x=total_reg, y=sum_french_register, by.x="session",by.y="session", all.x=TRUE, sort=TRUE)
largetotal_reg<-aggregate( sum_french_register$nb_utt, by=list(sum_french_register$keychild), FUN=sum)
names(largetotal_reg)<-c("keychild", "largetotalperchild")
sum_french_register<-merge(x=largetotal_reg, y=sum_french_register, by.x="keychild", by.y="keychild", all.x=TRUE, sort=TRUE)
#SAVE INFO OF REGISTERS IN FILE, TABLE 2 IN MANUSCRIPT
sum_french_register$percentageperSessionRegisterChild<-NA
sum_french_register$percentageperSessionRegisterChild<-sum_french_register$nb_utt/sum_french_register$total*100
average<-aggregate(sum_french_register$percentageperSessionRegisterChild, by=list(sum_french_register$keychild, sum_french_register$register), function(x) cbind(round(mean(x),2), round(sd(x),2)) )
names(average)<-c("keychild", "register", "averagepersession")
sum_french_register<-merge(x=average, y=sum_french_register, by.x=c("keychild", "register"), by.y=c("keychild", "register"), all.x=TRUE, sort=TRUE)
sumregister<-aggregate(sum_french_register$nb_utt, by=list(sum_french_register$keychild, sum_french_register$register), function(x) sum(x))
names(sumregister)<-c("keychild", "register", "sumperRegisterChild")
sum_french_register<-merge(x=sumregister, y=sum_french_register, by.x=c("keychild", "register"),by.y=c("keychild", "register"), all.x=TRUE, sort=TRUE)
sum_french_register$percentageperRegisterChild<-sum_french_register$sumperRegisterChild/sum_french_register$largetotalperchild*100
write.table(sum_french_register, file=paste0(derived, "sum_french_register_noinv.txt"), row.names=F, col.names=T,  quote=F)
##TABLE 2 MANUSCRIPT FRENCH PART
#Table 2. Percentage of the total number of utterances that was CDS, OCDS or ADS for each child.
table2.2<-unique(data.frame(sum_french_register$percentageperRegisterChild, sum_french_register$keychild, sum_french_register$register))
colnames(table2.2)<- c("percentage", "keychild", "register")
write.table(table2.2, file=paste0(derived, "french_table2.txt"), row.names = FALSE, col.names = TRUE)
aggregate(merged_speaker_info_french$utterance_id,by=list(merged_speaker_info_french$register, merged_speaker_info_french$speaker, merged_speaker_info_french$keychild, merged_speaker_info_french$session_id),FUN=length )->sum_french_register_speakers
colnames(sum_french_register_speakers) <- c("register", "speakers", "keychild","session", "nb_utt")
write.table(sum_french_register_speakers, file=paste0(derived, "french_register_noinv.txt"), row.names = FALSE, col.names = TRUE)
total_reg<-aggregate(sum_french_register_speakers$nb_utt, by=list(sum_french_register_speakers$session), FUN=sum)
names(total_reg)<-c("session", "total")
sum_french_register_speakers<-merge(x=total_reg, y=sum_french_register_speakers, by.x="session",by.y="session", all.x=TRUE, sort=TRUE)
largetotalkey<-aggregate( sum_french_register_speakers$nb_utt, by=list(sum_french_register_speakers$keychild), FUN=sum)
names(largetotalkey)<-c("keychild", "largetotalperchild")
sum_french_register_speakers<-merge(x=largetotalkey, y=sum_french_register_speakers, by.x="keychild", by.y="keychild", all.x=TRUE, sort=TRUE)
sum_french_register_speakers$percentage<-NA
sum_french_register_speakers$percentage<-sum_french_register_speakers$nb_utt/sum_french_register_speakers$total*100
average<-aggregate(sum_french_register_speakers$percentage, by=list(sum_french_register_speakers$keychild, sum_french_register_speakers$register, sum_french_register_speakers$speakers), function(x) cbind(round(mean(x),2), round(sd(x),2)) )
names(average)<-c("keychild", "register", "speakers", "average")
sum_french_register_speakers<-merge(x=average, y=sum_french_register_speakers, by.x=c("keychild", "register", "speakers"), by.y=c("keychild", "register", "speakers"), all.x=TRUE, sort=TRUE)
sumspeakerr<-aggregate(sum_french_register_speakers$nb_utt, by=list(sum_french_register_speakers$keychild,sum_french_register_speakers$register), function(x) sum(x))
names(sumspeakerr)<-c("keychild", "register", "largetotalperchildregister")
sum_french_register_speakers<-merge(x=sumspeakerr, y=sum_french_register_speakers, by.x=c("keychild", "register"), by.y=c("keychild", "register"), all.x=TRUE, sort=TRUE)
#SAVE INFO OF SPEAKERS PER REGISTER IN FILE, TABLE 3 IN MANUSCRIPT
sumspeakerregister<-aggregate(sum_french_register_speakers$nb_utt, by=list(sum_french_register_speakers$keychild, sum_french_register_speakers$speakers), function(x) sum(x))
names(sumspeakerregister)<-c("keychild", "speakers", "sumperSpeakerChild")
sum_french_register_speakers<-merge(x=sumspeakerregister, y=sum_french_register_speakers, by.x=c("keychild", "speakers"), by.y=c("keychild", "speakers"), all.x=TRUE, sort=TRUE)
largetotalregsp<-aggregate( sum_french_register_speakers$nb_utt, by=list(sum_french_register_speakers$keychild,sum_french_register_speakers$register,sum_french_register_speakers$speakers), FUN=sum)
names(largetotalregsp)<-c("keychild", "register", "speakers", "largetotalperchildspeakerreg")
sum_french_register_speakers<-merge(x=largetotalregsp, y=sum_french_register_speakers, by.x=c("keychild", "register", "speakers"), by.y=c("keychild", "register", "speakers"), all.x=TRUE, sort=TRUE)
sum_french_register_speakers$percentageperSpeakerRegisterChild<-sum_french_register_speakers$largetotalperchildspeakerreg/sum_french_register_speakers$largetotalperchild*100
write.table(sum_french_register_speakers, file=paste0(derived, "sum_french_register_speakers_noinv.txt"), row.names=F, col.names=T,  quote=F)
##TABLE 3 MANUSCRIPT FRENCH PART
#Table 3. Percentage of speech produced by mothers (MOT), other adults (ADU) and other children (OCHI) comprising CDS for each child. The numbers for ‘Neuoe are small because most speech around the child was not CDS.
table3.2<-unique(data.frame(sum_french_register_speakers$percentageperSpeakerRegisterChild, sum_french_register_speakers$keychild, sum_french_register_speakers$register, sum_french_register_speakers$speakers))
colnames(table3.2)<- c("percentage", "keychild", "register", "speaker")
write.table(table3.2, file=paste0(derived, "french_table3.txt"), row.names = FALSE, col.names = TRUE)
derivedtext="../for_reproduce/derived/text_analysis/"
write.table(merged_speaker_info_demuth, file=paste0(derivedtext, "demuth_convt.txt"), row.names = FALSE, col.names = TRUE, sep=";;")
write.table(merged_speaker_info_french, file=paste0(derivedtext, "french1_convt.txt"), row.names = FALSE, col.names = TRUE, sep=";;")
keychildren <- c("Hlobohang")
# "Litlhare", "Neuoe" Hlobohang
speakers <- c("mother", "child", "adult")
sessions<- as.vector(unique(demuth$session))
sessionsHlobohang<-sessions[1:23]
sessionsLitlhare<-sessions[24:46]
sessionsNeuoe<-sessions[47:69]
#Save for corpus analysis
for (sp in speakers){
for (child in keychildren){
for (sess in sessionsHlobohang){
demuth_keychild_directed_sp_child_sess<-demuth_keychild_directed[(demuth_keychild_directed$speaker==sp) & ( demuth_keychild_directed$keychild==child)& ( demuth_keychild_directed$session==sess), ]
write.table(demuth_keychild_directed_sp_child_sess, file=paste0(derivedtext, "Sesotho/", child, sp, sess, "CDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
demuth_otherchild_directed_sp_child_sess<-demuth_otherchild_directed[(demuth_otherchild_directed$speaker==sp) & ( demuth_otherchild_directed$keychild==child)& ( demuth_otherchild_directed$session==sess), ]
#write.table(demuth_otherchild_directed_sp_child_sess, file=paste0(path, "utterances/Sesotho/", child, sp, sess, "OCDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
demuth_adult_directed_sp_child_sess<-  demuth_adult_directed[(demuth_adult_directed$speaker==sp) & ( demuth_adult_directed$keychild==child)& ( demuth_adult_directed$session==sess), ]
#write.table(demuth_adult_directed_sp_child_sess, file=paste0(path, "utterances/Sesotho/", child, sp, sess, "ADS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
}
}
}
keychildren <- c("Hlobohang")
# "Litlhare", "Neuoe" Hlobohang
speakers <- c("mother", "child", "adult")
sessions<- as.vector(unique(demuth$session))
sessionsHlobohang<-sessions[1:23]
sessionsLitlhare<-sessions[24:46]
sessionsNeuoe<-sessions[47:69]
#Save for corpus analysis
for (sp in speakers){
for (child in keychildren){
for (sess in sessionsHlobohang){
demuth_keychild_directed_sp_child_sess<-demuth_keychild_directed[(demuth_keychild_directed$speaker==sp) & ( demuth_keychild_directed$keychild==child)& ( demuth_keychild_directed$session==sess), ]
write.table(demuth_keychild_directed_sp_child_sess, file=paste0(derivedtext, "Sesotho/", child, sp, sess, "CDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
demuth_otherchild_directed_sp_child_sess<-demuth_otherchild_directed[(demuth_otherchild_directed$speaker==sp) & ( demuth_otherchild_directed$keychild==child)& ( demuth_otherchild_directed$session==sess), ]
write.table(demuth_otherchild_directed_sp_child_sess, file=paste0(derivedtext, "Sesotho/", child, sp, sess, "OCDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
demuth_adult_directed_sp_child_sess<-  demuth_adult_directed[(demuth_adult_directed$speaker==sp) & ( demuth_adult_directed$keychild==child)& ( demuth_adult_directed$session==sess), ]
write.table(demuth_adult_directed_sp_child_sess, file=paste0(derivedtext, "Sesotho/", child, sp, sess, "ADS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
}
}
}
keychildren <- c("Hlobohang")
# "Litlhare", "Neuoe" Hlobohang
speakers <- c("mother", "child", "adult")
sessions<- as.vector(unique(demuth$session))
sessionsHlobohang<-sessions[1:23]
sessionsLitlhare<-sessions[24:46]
sessionsNeuoe<-sessions[47:69]
#Save for corpus analysis
for (sp in speakers){
for (child in keychildren){
for (sess in sessionsHlobohang){
demuth_keychild_directed_sp_child_sess<-demuth_keychild_directed[(demuth_keychild_directed$speaker==sp) & ( demuth_keychild_directed$keychild==child)& ( demuth_keychild_directed$session==sess), ]
write.table(demuth_keychild_directed_sp_child_sess, file=paste0(derivedtext, "Sesotho/", child, sp, sess, "CDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
demuth_otherchild_directed_sp_child_sess<-demuth_otherchild_directed[(demuth_otherchild_directed$speaker==sp) & ( demuth_otherchild_directed$keychild==child)& ( demuth_otherchild_directed$session==sess), ]
write.table(demuth_otherchild_directed_sp_child_sess, file=paste0(derivedtext, "Sesotho/", child, sp, sess, "OCDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
demuth_adult_directed_sp_child_sess<-  demuth_adult_directed[(demuth_adult_directed$speaker==sp) & ( demuth_adult_directed$keychild==child)& ( demuth_adult_directed$session==sess), ]
write.table(demuth_adult_directed_sp_child_sess, file=paste0(derivedtext, "Sesotho/", child, sp, sess, "ADS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
}
}
}
keychildren <- c("Litlhare") # "Litlhare", "Neuoe" Hlobohang
for (sp in speakers){
for (child in keychildren){
for (sess in sessionsHlobohang){
demuth_keychild_directed_sp_child_sess<-demuth_keychild_directed[(demuth_keychild_directed$speaker==sp) & ( demuth_keychild_directed$keychild==child)& ( demuth_keychild_directed$session==sess), ]
write.table(demuth_keychild_directed_sp_child_sess, file=paste0(derivedtext, "Sesotho/", child, sp, sess, "CDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
demuth_otherchild_directed_sp_child_sess<-demuth_otherchild_directed[(demuth_otherchild_directed$speaker==sp) & ( demuth_otherchild_directed$keychild==child)& ( demuth_otherchild_directed$session==sess), ]
write.table(demuth_otherchild_directed_sp_child_sess, file=paste0(derivedtext, "Sesotho/", child, sp, sess, "OCDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
demuth_adult_directed_sp_child_sess<-  demuth_adult_directed[(demuth_adult_directed$speaker==sp) & ( demuth_adult_directed$keychild==child)& ( demuth_adult_directed$session==sess), ]
write.table(demuth_adult_directed_sp_child_sess, file=paste0(derivedtext, "Sesotho/", child, sp, sess, "ADS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
}
}
}
keychildren <- c("Neuoe") # "Litlhare", "Neuoe" Hlobohang
for (sp in speakers){
for (child in keychildren){
for (sess in sessionsHlobohang){
demuth_keychild_directed_sp_child_sess<-demuth_keychild_directed[(demuth_keychild_directed$speaker==sp) & ( demuth_keychild_directed$keychild==child)& ( demuth_keychild_directed$session==sess), ]
write.table(demuth_keychild_directed_sp_child_sess, file=paste0(derivedtext, "Sesotho/", child, sp, sess, "CDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
demuth_otherchild_directed_sp_child_sess<-demuth_otherchild_directed[(demuth_otherchild_directed$speaker==sp) & ( demuth_otherchild_directed$keychild==child)& ( demuth_otherchild_directed$session==sess), ]
write.table(demuth_otherchild_directed_sp_child_sess, file=paste0(derivedtext, "Sesotho/", child, sp, sess, "OCDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
demuth_adult_directed_sp_child_sess<-  demuth_adult_directed[(demuth_adult_directed$speaker==sp) & ( demuth_adult_directed$keychild==child)& ( demuth_adult_directed$session==sess), ]
write.table(demuth_adult_directed_sp_child_sess, file=paste0(derivedtext, "Sesotho/", child, sp, sess, "ADS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
}
}
}
sessions<- as.vector(unique(french$session_id))
sessionsAnae<-sessions[1:11]
sessionsAnais<-sessions[12:23]
sessionsTheotime<-sessions[24:32]
keychildren <- c("Anae")#"Anae", "Anais", "Theotime"
for (sp in speakers){
for (child in keychildren){
for (sess in sessionsAnae){
french_keychild_directed_sp_child_sess<-  french_keychild_directed[(french_keychild_directed$speaker==sp) & (french_keychild_directed$keychild==child)& (french_keychild_directed$session_id==sess), ]
sess<-gsub("/", "_", sess)
write.table(french_keychild_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "CDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
french_otherchild_directed_sp_child_sess<-  french_otherchild_directed[(french_otherchild_directed$speaker==sp) & ( french_otherchild_directed$keychild==child)& ( french_otherchild_directed$session_id==sess), ]
write.table(french_otherchild_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "OCDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
french_adult_directed_sp_child_sess<-  french_adult_directed[(french_adult_directed$speaker==sp) & ( french_adult_directed$keychild==child)& ( french_adult_directed$session_id==sess), ]
write.table(french_adult_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "ADS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
}
}
}
keychildren <- c("Anais")#"Anae", "Anais", "Theotime"
for (sp in speakers){
for (child in keychildren){
for (sess in sessionsAnae){
french_keychild_directed_sp_child_sess<-  french_keychild_directed[(french_keychild_directed$speaker==sp) & (french_keychild_directed$keychild==child)& (french_keychild_directed$session_id==sess), ]
sess<-gsub("/", "_", sess)
write.table(french_keychild_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "CDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
french_otherchild_directed_sp_child_sess<-  french_otherchild_directed[(french_otherchild_directed$speaker==sp) & ( french_otherchild_directed$keychild==child)& ( french_otherchild_directed$session_id==sess), ]
write.table(french_otherchild_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "OCDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
french_adult_directed_sp_child_sess<-  french_adult_directed[(french_adult_directed$speaker==sp) & ( french_adult_directed$keychild==child)& ( french_adult_directed$session_id==sess), ]
write.table(french_adult_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "ADS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
}
}
}
keychildren <- c("Theotime")#"Anae", "Anais", "Theotime"
for (sp in speakers){
for (child in keychildren){
for (sess in sessionsAnae){
french_keychild_directed_sp_child_sess<-  french_keychild_directed[(french_keychild_directed$speaker==sp) & (french_keychild_directed$keychild==child)& (french_keychild_directed$session_id==sess), ]
sess<-gsub("/", "_", sess)
write.table(french_keychild_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "CDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
french_otherchild_directed_sp_child_sess<-  french_otherchild_directed[(french_otherchild_directed$speaker==sp) & ( french_otherchild_directed$keychild==child)& ( french_otherchild_directed$session_id==sess), ]
write.table(french_otherchild_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "OCDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
french_adult_directed_sp_child_sess<-  french_adult_directed[(french_adult_directed$speaker==sp) & ( french_adult_directed$keychild==child)& ( french_adult_directed$session_id==sess), ]
write.table(french_adult_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "ADS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
}
}
}
head(french_keychild_directed_sp_child_sess)
head(french_otherchild_directed_sp_child_sess)
head(french_adult_directed_sp_child_sess)
french_keychild_directed
french_oterchild_directed
french_otherchild_directed
keychildren <- c("Theotime")#"Anae", "Anais", "Theotime"
for (sp in speakers){
for (child in keychildren){
for (sess in sessionsAnae){
french_keychild_directed_sp_child_sess<-  french_keychild_directed[(french_keychild_directed$speaker==sp) & (french_keychild_directed$keychild==child)& (french_keychild_directed$session_id==sess), ]
sess<-gsub("/", "_", sess)
write.table(french_keychild_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "CDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
write.table(french_keychild_directed_sp_child_sess %>% select(utterance), file=paste0(derivedtext, "French/cleanutterance", child, sp, sess, "CDS.csv"), row.names=F, col.names=F, sep="\t",  quote=F)
french_otherchild_directed_sp_child_sess<-  french_otherchild_directed[(french_otherchild_directed$speaker==sp) & ( french_otherchild_directed$keychild==child)& ( french_otherchild_directed$session_id==sess), ]
write.table(french_otherchild_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "OCDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
write.table(french_otherchild_directed_sp_child_sess %>% select(utterance), file=paste0(derivedtext, "French/cleanutterance", child, sp, sess, "CDS.csv"), row.names=F, col.names=F, sep="\t",  quote=F)
french_adult_directed_sp_child_sess<-  french_adult_directed[(french_adult_directed$speaker==sp) & ( french_adult_directed$keychild==child)& ( french_adult_directed$session_id==sess), ]
write.table(french_adult_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "ADS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
write.table(french_adult_directed_sp_child_sess, file=paste0(derivedtext, "French/cleanutterance", child, sp, sess, "ADS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
}
}
}
keychildren <- c("Anae")#"Anae", "Anais", "Theotime"
for (sp in speakers){
for (child in keychildren){
for (sess in sessionsAnae){
french_keychild_directed_sp_child_sess<-  french_keychild_directed[(french_keychild_directed$speaker==sp) & (french_keychild_directed$keychild==child)& (french_keychild_directed$session_id==sess), ]
sess<-gsub("/", "_", sess)
write.table(french_keychild_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "CDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
write.table(french_keychild_directed_sp_child_sess %>% select(utterance), file=paste0(derivedtext, "French/cleanutterance", child, sp, sess, "CDS.csv"), row.names=F, col.names=F, sep="\t",  quote=F)
french_otherchild_directed_sp_child_sess<-  french_otherchild_directed[(french_otherchild_directed$speaker==sp) & ( french_otherchild_directed$keychild==child)& ( french_otherchild_directed$session_id==sess), ]
write.table(french_otherchild_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "OCDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
write.table(french_otherchild_directed_sp_child_sess %>% select(utterance), file=paste0(derivedtext, "French/cleanutterance", child, sp, sess, "CDS.csv"), row.names=F, col.names=F, sep="\t",  quote=F)
french_adult_directed_sp_child_sess<-  french_adult_directed[(french_adult_directed$speaker==sp) & ( french_adult_directed$keychild==child)& ( french_adult_directed$session_id==sess), ]
write.table(french_adult_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "ADS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
write.table(french_adult_directed_sp_child_sess, file=paste0(derivedtext, "French/cleanutterance", child, sp, sess, "ADS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
}
}
}
sessions<- as.vector(unique(french$session_id))
sessionsAnae<-sessions[1:11]
sessionsAnais<-sessions[12:23]
sessionsTheotime<-sessions[24:32]
keychildren <- c("Anae")#"Anae", "Anais", "Theotime"
for (sp in speakers){
for (child in keychildren){
for (sess in sessionsAnae){
french_keychild_directed_sp_child_sess<-  french_keychild_directed[(french_keychild_directed$speaker==sp) & (french_keychild_directed$keychild==child)& (french_keychild_directed$session_id==sess), ]
sess<-gsub("/", "_", sess)
write.table(french_keychild_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "CDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
write.table(french_keychild_directed_sp_child_sess %>% select(utterance), file=paste0(derivedtext, "French/cleanutterance", child, sp, sess, "CDS.csv"), row.names=F, col.names=F, sep="\t",  quote=F)
french_otherchild_directed_sp_child_sess<-  french_otherchild_directed[(french_otherchild_directed$speaker==sp) & ( french_otherchild_directed$keychild==child)& ( french_otherchild_directed$session_id==sess), ]
write.table(french_otherchild_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "OCDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
write.table(french_otherchild_directed_sp_child_sess %>% select(utterance), file=paste0(derivedtext, "French/cleanutterance", child, sp, sess, "CDS.csv"), row.names=F, col.names=F, sep="\t",  quote=F)
french_adult_directed_sp_child_sess<-  french_adult_directed[(french_adult_directed$speaker==sp) & ( french_adult_directed$keychild==child)& ( french_adult_directed$session_id==sess), ]
write.table(french_adult_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "ADS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
write.table(french_adult_directed_sp_child_sess %>% select(utterance), file=paste0(derivedtext, "French/cleanutterance", child, sp, sess, "ADS.csv"), row.names=F, col.names=F, sep="\t",  quote=F)
}
}
}
dataf$keychild <- NA
dataf$keychild[dataf$utterance_id %in% c(1:16380)] <- "Anae"
dataf$keychild[dataf$utterance_id %in% c(16381:31097)] <- "Anais"
dataf$keychild[dataf$utterance_id %in% c(31092:38385)] <- "Theotime"
dataf<-subset(dataf, !(dataf$speaker_role_raw=="target_child")) #remove target child utterances
#add 'speaker' column
dataf$speaker<- NA
dataf$speaker[grep("mother|mother\n", dataf$speaker_role_raw)]  <- "mother"
dataf$speaker[grep("Investigator|investigator", dataf$speaker_role_raw)] <- "investigator"
dataf$speaker[grep("sister|Brother1|.*Brother.*|Brother|Boy|Anouk", dataf$speaker_role_raw)] <- "child"
dataf$speaker[grep("father|Aunt Relative|Uncle Relative|Zoom Friend|.*Zoom Friend.*", dataf$speaker_role_raw)] <- "adult"
dataf$speaker[grep('target_child', dataf$speaker_role_raw)] <- "Target_Child"
dataf<-dataf[!grepl("@UTF8", dataf$speaker_id),]
datafSecondAnnotations<-subset(dataf, !(dataf$annotation2==""))
length(which(datafSecondAnnotations$Diff_annotations=="DIFFER"))/nrow(datafSecondAnnotations)
differing<-subset(datafSecondAnnotations, (datafSecondAnnotations$Diff_annotations=="DIFFER"))
nquestions<-nrow(subset(differing, differing$annotation1=="?"))+ nrow(subset(differing, differing$annotation2=="?"))
nquestions/nrow(differing)
#Sum the number of utterances per speaker category and keychild
aggregate(dataf$utterance_id,by=list( dataf$speaker, dataf$keychild, dataf$session),length )->sum_french_WITHINV
colnames(sum_french_WITHINV) <- c("speaker", "keychild", "session", "nb_uttpersession")
french<-dataf
length_keychildf<- french %>% group_by(keychild) %>% summarise(no_rows = length(keychild))
french<-subset(french, !(french$speaker=="investigator")) #remove inv utterances
table(french$keychild)
#Sum the number of utterances per speaker category and keychild
aggregate(french$utterance_id,by=list( french$speaker, french$keychild, french$session),length )->sum_french
colnames(sum_french) <- c("speaker", "keychild", "session", "nb_uttpersession")
#SAVE INFO OF SPEAKERS IN FILE, TABLE 1 IN MANUSCRIPT
#measure percentage per speaker
total<-aggregate( sum_french$nb_uttpersession, by=list(sum_french$session), FUN=sum)
names(total)<-c("session", "totalofsession")
sum_french<-merge(x=total, y=sum_french, by.x="session", by.y="session", all.x=TRUE, sort=TRUE)
largetotal<-aggregate( sum_french$nb_uttpersession, by=list(sum_french$keychild), FUN=sum)
names(largetotal)<-c("keychild", "largetotalperchild")
sum_french<-merge(x=largetotal, y=sum_french, by.x="keychild", by.y="keychild", all.x=TRUE, sort=TRUE)
sum_french$percentageperSessionSpeakerChild<-NA
sum_french$percentageperSessionSpeakerChild<-sum_french$nb_uttpersession/sum_french$total*100
average<-aggregate(sum_french$percentageperSessionSpeakerChild, by=list(sum_french$keychild, sum_french$speaker), function(x) cbind(round(mean(x),2), round(sd(x),2)) )
names(average)<-c("keychild", "speaker", "averagepersession")
sumspeaker<-aggregate(sum_french$nb_uttpersession, by=list(sum_french$keychild, sum_french$speaker), function(x) sum(x))
names(sumspeaker)<-c("keychild", "speaker", "sumperSpeakerChild")
sum_french<-merge(x=average, y=sum_french, by.x=c("keychild", "speaker"), by.y=c("keychild", "speaker"), all.x=TRUE, sort=TRUE)
sum_french<-merge(x=sumspeaker, y=sum_french, by.x=c("keychild", "speaker"), by.y=c("keychild", "speaker"), all.x=TRUE, sort=TRUE)
sum_french$percentageperSpeakerChild<-sum_french$sumperSpeakerChild/sum_french$largetotalperchild*100
write.table(sum_french, file=paste0(derived, "sum_french.txt"), row.names=F, col.names=T,  quote=F)
##TABLE 1 MANUSCRIPT FRENCH PART
#Table 1. Percentage of the total number of utterances produced by mothers, other adults and children for each child.
table1.2<-unique(data.frame(sum_french$percentageperSpeakerChild, sum_french$keychild, sum_french$speaker))
colnames(table1.2)<- c("percentage", "keychild", "speaker")
write.table(table1.2, file=paste0(derived, "french_table1.txt"), row.names = FALSE, col.names = TRUE)
french_backup <- french
french_backup
head(french_backup)
dataf<-subset(dataf, !(dataf$speaker=="investigator")) #remove target investigator
nrow(dataf) #19666
french<-dataf
annotations_unknownfrench<-subset(dataf, (dataf$annotation1=="?")) # 254
annotations_NAsfrench <- subset(dataf, is.na(dataf$annotation1)) # 528
french<-subset(french, !(french$annotation1=="?"))
french<-french[!is.na(french$annotation1), ]
total_french<-nrow(french) #18884
aggregate(french$utterance_id,by=list(french$annotation1,  french$speaker, french$keychild),FUN=length )->sum_french_addressee
colnames(sum_french_addressee) <- c("addresse", "speaker", "keychild", "nb_utt")
#matches addressee with speaker roles (especially for non-child directed)
speaker_info_french<- as.data.frame(unique(french %>%select(speaker_id, speaker_role_raw)))
colnames(speaker_info_french)[colnames(speaker_info_french)=="speaker_role_raw"] <- "role_adressee"
merged_speaker_info_french<-french
merged_speaker_info_french$role_adressee <- NA
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("MIX")] <- "Mix"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("A", "FRI", "AUN", "UNC", "FAT")] <- "Adult"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 == "1"] <- "Keychild"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("DOG", "PET")] <- "Animals"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("SELF")] <- "Self"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("MOT")] <- "Mother"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("TOY")] <- "Toy"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("OBS", "CAM", "INV", "INV ")] <- "Investigator"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("TEL", "TELEPHONE")] <- "Telephone"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("BOY", "COU", "SIS", "BR1", "BRO","O","O " )] <- "Other child"
merged_speaker_info_french$role_adressee[merged_speaker_info_french$annotation1 %in% c("TOINE", "COLLIN", "N", "", "? ")] <- "unidentified"
summary(as.factor(merged_speaker_info_french$role_adressee))
merged_speaker_info_french<-subset(merged_speaker_info_french, !(merged_speaker_info_french$role_adressee=="Investigator"))
merged_speaker_info_french<-subset(merged_speaker_info_french, !(merged_speaker_info_french$role_adressee=="Unknown"))
french_adult_directed<-subset(merged_speaker_info_french, (merged_speaker_info_french$role_adressee=="Adult"|merged_speaker_info_french$annotation1=="Mother"))
# Utterances addressed to others - children
french_otherchild_directed<-subset(merged_speaker_info_french, (merged_speaker_info_french$role_adressee=="Other child"))
# Utterances addressed to keychild
french_keychild_directed<-subset(merged_speaker_info_french, (merged_speaker_info_french$role_adressee=="Keychild"))
# Utterances addressed to unclassified
french_unclassified_directed<-subset(merged_speaker_info_french, (merged_speaker_info_french$role_adressee=="Animals"| merged_speaker_info_french$role_adressee=="Mix"|merged_speaker_info_french$role_adressee=="Telephone"| merged_speaker_info_french$role_adressee=="Self"| merged_speaker_info_french$role_adressee=="Toy"| merged_speaker_info_french$role_adressee=="unidentified"))
french_investigator_directed<-subset(merged_speaker_info_french, (merged_speaker_info_french$role_adressee=="Investigator"))
#Register columns
merged_speaker_info_french$register <- NA
merged_speaker_info_french$register[merged_speaker_info_french$role_adressee == "Mother"] <- "ADS"
merged_speaker_info_french$register[merged_speaker_info_french$role_adressee == "Investigator"] <- "Investigator"
merged_speaker_info_french$register[grep("Other child", merged_speaker_info_french$role_adressee)]  <- "OCDS"
merged_speaker_info_french$register[grep("Adult", merged_speaker_info_french$role_adressee)]  <- "ADS"
merged_speaker_info_french$register[grep("Keychild", merged_speaker_info_french$role_adressee)] <- "CDS"
merged_speaker_info_french$register[grep("Animals|Mix|Unknown|Self|Telephone|Toy|unidentified", merged_speaker_info_french$role_adressee)]  <- "unclassified"
#Aggregate by register
aggregate(merged_speaker_info_french$utterance_id,by=list(merged_speaker_info_french$register,  merged_speaker_info_french$keychild, merged_speaker_info_french$session_id),FUN=length )->sum_french_register
colnames(sum_french_register) <- c("register", "keychild", "session", "nb_utt")
#subset all utterances marked as ADS & OCDS
french_ad_directed_utts<- as.data.frame(french_adult_directed %>%select(utterance))
french_oc_directed_utts<- as.data.frame(french_otherchild_directed %>%select(utterance))
french_c_directed_utts<- as.data.frame(french_keychild_directed %>%select(utterance))
length(french_adult_directed$utterance)/total_french *100 #0.39
length(french_otherchild_directed$utterance)/total_french *100 #4.2
###Average per speaker and register
total_reg<-aggregate(sum_french_register$nb_utt, by=list(sum_french_register$session), FUN=sum)
names(total_reg)<-c("session", "total")
sum_french_register<-merge(x=total_reg, y=sum_french_register, by.x="session",by.y="session", all.x=TRUE, sort=TRUE)
largetotal_reg<-aggregate( sum_french_register$nb_utt, by=list(sum_french_register$keychild), FUN=sum)
names(largetotal_reg)<-c("keychild", "largetotalperchild")
sum_french_register<-merge(x=largetotal_reg, y=sum_french_register, by.x="keychild", by.y="keychild", all.x=TRUE, sort=TRUE)
#SAVE INFO OF REGISTERS IN FILE, TABLE 2 IN MANUSCRIPT
sum_french_register$percentageperSessionRegisterChild<-NA
sum_french_register$percentageperSessionRegisterChild<-sum_french_register$nb_utt/sum_french_register$total*100
average<-aggregate(sum_french_register$percentageperSessionRegisterChild, by=list(sum_french_register$keychild, sum_french_register$register), function(x) cbind(round(mean(x),2), round(sd(x),2)) )
names(average)<-c("keychild", "register", "averagepersession")
sum_french_register<-merge(x=average, y=sum_french_register, by.x=c("keychild", "register"), by.y=c("keychild", "register"), all.x=TRUE, sort=TRUE)
sumregister<-aggregate(sum_french_register$nb_utt, by=list(sum_french_register$keychild, sum_french_register$register), function(x) sum(x))
names(sumregister)<-c("keychild", "register", "sumperRegisterChild")
sum_french_register<-merge(x=sumregister, y=sum_french_register, by.x=c("keychild", "register"),by.y=c("keychild", "register"), all.x=TRUE, sort=TRUE)
sum_french_register$percentageperRegisterChild<-sum_french_register$sumperRegisterChild/sum_french_register$largetotalperchild*100
write.table(sum_french_register, file=paste0(derived, "sum_french_register_noinv.txt"), row.names=F, col.names=T,  quote=F)
##TABLE 2 MANUSCRIPT FRENCH PART
#Table 2. Percentage of the total number of utterances that was CDS, OCDS or ADS for each child.
table2.2<-unique(data.frame(sum_french_register$percentageperRegisterChild, sum_french_register$keychild, sum_french_register$register))
colnames(table2.2)<- c("percentage", "keychild", "register")
write.table(table2.2, file=paste0(derived, "french_table2.txt"), row.names = FALSE, col.names = TRUE)
aggregate(merged_speaker_info_french$utterance_id,by=list(merged_speaker_info_french$register, merged_speaker_info_french$speaker, merged_speaker_info_french$keychild, merged_speaker_info_french$session_id),FUN=length )->sum_french_register_speakers
colnames(sum_french_register_speakers) <- c("register", "speakers", "keychild","session", "nb_utt")
write.table(sum_french_register_speakers, file=paste0(derived, "french_register_noinv.txt"), row.names = FALSE, col.names = TRUE)
total_reg<-aggregate(sum_french_register_speakers$nb_utt, by=list(sum_french_register_speakers$session), FUN=sum)
names(total_reg)<-c("session", "total")
sum_french_register_speakers<-merge(x=total_reg, y=sum_french_register_speakers, by.x="session",by.y="session", all.x=TRUE, sort=TRUE)
largetotalkey<-aggregate( sum_french_register_speakers$nb_utt, by=list(sum_french_register_speakers$keychild), FUN=sum)
names(largetotalkey)<-c("keychild", "largetotalperchild")
sum_french_register_speakers<-merge(x=largetotalkey, y=sum_french_register_speakers, by.x="keychild", by.y="keychild", all.x=TRUE, sort=TRUE)
sum_french_register_speakers$percentage<-NA
sum_french_register_speakers$percentage<-sum_french_register_speakers$nb_utt/sum_french_register_speakers$total*100
average<-aggregate(sum_french_register_speakers$percentage, by=list(sum_french_register_speakers$keychild, sum_french_register_speakers$register, sum_french_register_speakers$speakers), function(x) cbind(round(mean(x),2), round(sd(x),2)) )
names(average)<-c("keychild", "register", "speakers", "average")
sum_french_register_speakers<-merge(x=average, y=sum_french_register_speakers, by.x=c("keychild", "register", "speakers"), by.y=c("keychild", "register", "speakers"), all.x=TRUE, sort=TRUE)
sumspeakerr<-aggregate(sum_french_register_speakers$nb_utt, by=list(sum_french_register_speakers$keychild,sum_french_register_speakers$register), function(x) sum(x))
names(sumspeakerr)<-c("keychild", "register", "largetotalperchildregister")
sum_french_register_speakers<-merge(x=sumspeakerr, y=sum_french_register_speakers, by.x=c("keychild", "register"), by.y=c("keychild", "register"), all.x=TRUE, sort=TRUE)
#SAVE INFO OF SPEAKERS PER REGISTER IN FILE, TABLE 3 IN MANUSCRIPT
sumspeakerregister<-aggregate(sum_french_register_speakers$nb_utt, by=list(sum_french_register_speakers$keychild, sum_french_register_speakers$speakers), function(x) sum(x))
names(sumspeakerregister)<-c("keychild", "speakers", "sumperSpeakerChild")
sum_french_register_speakers<-merge(x=sumspeakerregister, y=sum_french_register_speakers, by.x=c("keychild", "speakers"), by.y=c("keychild", "speakers"), all.x=TRUE, sort=TRUE)
largetotalregsp<-aggregate( sum_french_register_speakers$nb_utt, by=list(sum_french_register_speakers$keychild,sum_french_register_speakers$register,sum_french_register_speakers$speakers), FUN=sum)
names(largetotalregsp)<-c("keychild", "register", "speakers", "largetotalperchildspeakerreg")
sum_french_register_speakers<-merge(x=largetotalregsp, y=sum_french_register_speakers, by.x=c("keychild", "register", "speakers"), by.y=c("keychild", "register", "speakers"), all.x=TRUE, sort=TRUE)
sum_french_register_speakers$percentageperSpeakerRegisterChild<-sum_french_register_speakers$largetotalperchildspeakerreg/sum_french_register_speakers$largetotalperchild*100
write.table(sum_french_register_speakers, file=paste0(derived, "sum_french_register_speakers_noinv.txt"), row.names=F, col.names=T,  quote=F)
##TABLE 3 MANUSCRIPT FRENCH PART
#Table 3. Percentage of speech produced by mothers (MOT), other adults (ADU) and other children (OCHI) comprising CDS for each child. The numbers for ‘Neuoe are small because most speech around the child was not CDS.
table3.2<-unique(data.frame(sum_french_register_speakers$percentageperSpeakerRegisterChild, sum_french_register_speakers$keychild, sum_french_register_speakers$register, sum_french_register_speakers$speakers))
colnames(table3.2)<- c("percentage", "keychild", "register", "speaker")
write.table(table3.2, file=paste0(derived, "french_table3.txt"), row.names = FALSE, col.names = TRUE)
head(french_keychild_directed)
nrow(french_keychild_directed)
nrow(french_otherchild_directed)
nrow(french_adult_directed)
french_adult_directed %>% select(utterance)
keychildren <- c("Anae")#"Anae", "Anais", "Theotime"
for (sp in speakers){
for (child in keychildren){
for (sess in sessionsAnae){
french_keychild_directed_sp_child_sess<-  french_keychild_directed[(french_keychild_directed$speaker==sp) & (french_keychild_directed$keychild==child)& (french_keychild_directed$session_id==sess), ]
sess<-gsub("/", "_", sess)
write.table(french_keychild_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "CDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
write.table(french_keychild_directed_sp_child_sess %>% select(utterance), file=paste0(derivedtext, "French/cleanutterance", child, sp, sess, "CDS.csv"), row.names=F, col.names=F, sep="\t",  quote=F)
french_otherchild_directed_sp_child_sess<-  french_otherchild_directed[(french_otherchild_directed$speaker==sp) & ( french_otherchild_directed$keychild==child)& ( french_otherchild_directed$session_id==sess), ]
write.table(french_otherchild_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "OCDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
write.table(french_otherchild_directed_sp_child_sess %>% select(utterance), file=paste0(derivedtext, "French/cleanutterance", child, sp, sess, "CDS.csv"), row.names=F, col.names=F, sep="\t",  quote=F)
french_adult_directed_sp_child_sess<-  french_adult_directed[(french_adult_directed$speaker==sp) & ( french_adult_directed$keychild==child)& ( french_adult_directed$session_id==sess), ]
write.table(french_adult_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "ADS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
write.table(french_adult_directed_sp_child_sess %>% select(utterance), file=paste0(derivedtext, "French/cleanutterance", child, sp, sess, "ADS.csv"), row.names=F, col.names=F, sep="\t",  quote=F)
}
}
}
keychildren <- c("Anais")#"Anae", "Anais", "Theotime"
for (sp in speakers){
for (child in keychildren){
for (sess in sessionsAnae){
french_keychild_directed_sp_child_sess<-  french_keychild_directed[(french_keychild_directed$speaker==sp) & (french_keychild_directed$keychild==child)& (french_keychild_directed$session_id==sess), ]
sess<-gsub("/", "_", sess)
write.table(french_keychild_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "CDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
french_otherchild_directed_sp_child_sess<-  french_otherchild_directed[(french_otherchild_directed$speaker==sp) & ( french_otherchild_directed$keychild==child)& ( french_otherchild_directed$session_id==sess), ]
write.table(french_otherchild_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "OCDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
french_adult_directed_sp_child_sess<-  french_adult_directed[(french_adult_directed$speaker==sp) & ( french_adult_directed$keychild==child)& ( french_adult_directed$session_id==sess), ]
write.table(french_adult_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "ADS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
}
}
}
keychildren <- c("Theotime")#"Anae", "Anais", "Theotime"
for (sp in speakers){
for (child in keychildren){
for (sess in sessionsAnae){
french_keychild_directed_sp_child_sess<-  french_keychild_directed[(french_keychild_directed$speaker==sp) & (french_keychild_directed$keychild==child)& (french_keychild_directed$session_id==sess), ]
sess<-gsub("/", "_", sess)
write.table(french_keychild_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "CDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
french_otherchild_directed_sp_child_sess<-  french_otherchild_directed[(french_otherchild_directed$speaker==sp) & ( french_otherchild_directed$keychild==child)& ( french_otherchild_directed$session_id==sess), ]
write.table(french_otherchild_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "OCDS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
french_adult_directed_sp_child_sess<-  french_adult_directed[(french_adult_directed$speaker==sp) & ( french_adult_directed$keychild==child)& ( french_adult_directed$session_id==sess), ]
write.table(french_adult_directed_sp_child_sess, file=paste0(derivedtext, "French/", child, sp, sess, "ADS.csv"), row.names=F, col.names=T, sep="\t",  quote=F)
}
}
}
