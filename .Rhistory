#load packages
library(dplyr)
library(tidyr)
##load datasets
lang<-"Sesotho"
langf<-"French"
path="/Users/admin/Desktop/resultspeerspeech/"
#Demuth, sesotho corpus
demuth<-read.csv(file="/Users/admin/Downloads/sesotho_CDS-Sheet1.csv", header=TRUE)
#Demuth, sesotho corpus
demuth<-read.csv(file="../for_reproduce/sesotho_CDS.csv", header=TRUE)
#French corpus
dataf<-read.csv(file="../for_reproduce/French_corpus.csv", header=TRUE)
#Sys.setlocale("LC_CTYPE", "en_US_POSIX.UTF-8")
#Sys.setlocale("LANG", "en_US_POSIX.UTF-8")
Sys.setlocale(category = "LC_ALL", locale = "en_SE.utf8")
knitr::opts_chunk$set(warning = FALSE, message = FALSE, cache = FALSE, fig.pos = "T")
#setwd("~/Documents/lscp-ciipme-gh/writeup/SEStabletDaycare")
require("papaja")
library(psych)
library(car)
library(ggplot2)
library(scales)
library(gridExtra)
library(lme4)
library(ggpubr)
library(lmerTest)
path="derivedFiles/"
read.table("../derivedFiles/line_per_interval.txt",header=T)->rawest
read.table("../derivedFiles/line_per_interval_cds.txt",header=T)->raw
forreg <- raw[raw$speakerID !="CHI",]
read.table("../derivedFiles/meanss.txt",header=T)->summaries
read.delim("../input/demo_data.csv", header = T) -> demo_data
demo_data[demo_data$chi_id !="C23",] -> demo_data #file error
demo_data$n_of_siblings <- demo_data$n_of_siblings -1
demo_data$duration <- demo_data$dur /3600
subset(demo_data,half_of_day_delivery %in% "M" )->demo_data
subset(demo_data,sex %in% "M" )->demo_data_males
subset(demo_data,sex %in% "F" )->demo_data_females
#for this ana, we only care about these four
include=c("adult", "MFV"  , "children")
read.table("../derivedFiles/sums_low.txt",header=T)->sums_low
sums_low[sums_low$child !="C23",] -> sums_low
as.character(sums_low$source)->sums_low$source
sums_low$source[ sums_low$speakerID %in% c("FA2","FA3")] <- "adult" #create  female adults cats
sums_low$source[ sums_low$speakerID %in% c("MA1","MA2") ] <- "adult" #create  male adults cats
sums_low$source[ sums_low$speakerID %in% c("UC1","UC2") ] <- "children" #create  children cats
sums_low$source[ sums_low$speakerID %in% c("FA1") ] <- "MFV" #create  main female voice  cats
sums_low$source[ sums_low$speakerID %in% c("SP") ] <- "SP"
sums_low$source[ sums_low$speakerID %in% c("XOL") ] <- "XOL"
sums_low$source[ sums_low$speakerID %in% c("Noise") ] <- "Noise"
sums_low$source[ sums_low$speakerID %in% c("CHI") ] <- "CHI"
sums_low$n_of_siblings <- sums_low$n_of_siblings -1
#column created for chronological graphical representations
sums_low$child_age=paste0(sums_low$age_mo, sums_low$child)
sums_low$child_age[sums_low$child=="C13"] <- "06C13"
sums_low$child_age[sums_low$child=="C14"] <- "08C14"
sums_low$child_age[sums_low$child=="C25"] <- "08C25"
#reduce the dataset to the vars that go into the regression, for clarity
subset(sums_low,source %in% include )->incdat_low
subset(sums_low,source %in% include & cds %in% T)->incdat_CDS_low
#sum overall
aggregate(incdat_low$norm_totdur,by=list(incdat_low$File, incdat_low$key, incdat_low$child, incdat_low$mot, incdat_low$date, incdat_low$age_mo, incdat_low$sex, incdat_low$n_of_siblings, incdat_low$oder_of_birth,incdat_low$min_coded, incdat_low$agecat, incdat_low$child_age),sum)->bigsum_low
colnames(bigsum_low)<-c("File","key","child","mot","date","age_mo","sex","n_of_siblings","oder_of_birth","min_coded", "agecat", "child_age", "tot")
bigsum_low[,c("tot")]=bigsum_low[,c("tot")]*60
bigsum_low$age_yo = bigsum_low$age_mo / 12
bigsum_low$age_c = bigsum_low$age_mo - mean(bigsum_low$age_mo)
#sum overall but only CD
aggregate(incdat_CDS_low$norm_totdur,by=list(incdat_CDS_low$File, incdat_CDS_low$key, incdat_CDS_low$child, incdat_CDS_low$mot, incdat_CDS_low$date, incdat_CDS_low$age_mo, incdat_CDS_low$sex, incdat_CDS_low$n_of_siblings, incdat_CDS_low$oder_of_birth,incdat_CDS_low$min_coded, incdat_CDS_low$agecat, incdat_CDS_low$child_age),sum)->bigsum_CD_low
colnames(bigsum_CD_low)<-c("File","key","child","mot","date","age_mo","sex","n_of_siblings","oder_of_birth","min_coded", "agecat","child_age", "tot")
bigsum_CD_low[,c("tot")]=bigsum_CD_low[,c("tot")]*60
bigsum_CD_low$age_yo = bigsum_CD_low$age_mo / 12
bigsum_CD_low$age_c = bigsum_CD_low$age_mo - mean(bigsum_CD_low$age_mo)
merge(x=bigsum_CD_low,y = bigsum_low[ ,c("tot", "key")], by="key", all.x=T,all.y=F)->bigsum_CD_low
bigsum_CD_low$perc_cds=(bigsum_CD_low$tot.x/bigsum_CD_low$tot.y)*100
bigsum_CD_low$oh <- bigsum_CD_low$tot.y - bigsum_CD_low$tot.x
#tot.x is CDS total and tox.y is overall total
#sum each source separately
aggregate(incdat_low$norm_totdur,by=list(incdat_low$File, incdat_low$key, incdat_low$child, incdat_low$mot, incdat_low$date, incdat_low$age_mo, incdat_low$sex, incdat_low$n_of_siblings, incdat_low$oder_of_birth,incdat_low$min_coded, incdat_low$source, incdat_low$agecat,incdat_low$child_age),sum)->bysource_low
colnames(bysource_low)<-c("File","key","child","mot","date","age_mo","sex","n_of_siblings","oder_of_birth","min_coded", "source", "agecat", "child_age","tot")
bysource_low[,c("tot")]=bysource_low[,c("tot")]*60
bysource_low$age_c = bysource_low$age_mo - mean(bysource_low$age_mo)
#do the same for CD
aggregate(incdat_CDS_low$norm_totdur,by=list(incdat_CDS_low$File, incdat_CDS_low$key, incdat_CDS_low$child, incdat_CDS_low$mot, incdat_CDS_low$date, incdat_CDS_low$age_mo, incdat_CDS_low$sex, incdat_CDS_low$n_of_siblings, incdat_CDS_low$oder_of_birth,incdat_CDS_low$min_coded, incdat_CDS_low$source, incdat_CDS_low$agecat,incdat_CDS_low$child_age),sum)->bysource_cd_low
colnames(bysource_cd_low)<-c("File","key","child","mot","date","age_mo","sex","n_of_siblings","oder_of_birth","min_coded", "source", "agecat","child_age","tot.x")
bysource_cd_low[,c("tot.x")]=bysource_cd_low[,c("tot.x")]*60
bysource_cd_low$age_c = bysource_cd_low$age_mo - mean(bysource_cd_low$age_mo)
bysource_cd_low <- cbind(bysource_cd_low, bysource_low[,14, drop=FALSE])
bysource_cd_low$oh <- bysource_cd_low$tot - bysource_cd_low$tot.x
#and a table that has both CD and overall for the graphs
aggregate(incdat_low$norm_totdur,by=list(incdat_low$File, incdat_low$key, incdat_low$child, incdat_low$mot, incdat_low$date, incdat_low$age_mo, incdat_low$sex, incdat_low$n_of_siblings, incdat_low$oder_of_birth,incdat_low$min_coded, incdat_low$source, incdat_low$cds,  incdat_low$agecat, incdat_low$child_age), sum)->forsourcegraphs.con
colnames(forsourcegraphs.con)<-c("File","key","child","mot","date","age_mo","sex","n_of_siblings","oder_of_birth","min_coded", "source", "cds", "agecat","child_age","tot")
outt_low <- bigsum_CD_low[bigsum_CD_low$child !="C07",]
out_low <- bysource_cd_low[bysource_cd_low$child !="C07",]
s36mo_bigsum_low  <- bigsum_CD_low[bigsum_CD_low$age_mo <= 36,]
s36mo_forsource_low  <- forsourcegraphs.con[forsourcegraphs.con$age_mo <=  36,]
s36mo_bysource_low  <- bysource_cd_low[bysource_cd_low$age_mo <=  36,]
#for this ana, we also care about overlapping and far away speech
include=c("adult", "MFV"  , "children", "SP", "XOL")
read.table("../derivedFiles/sums_high.txt",header=T)->sums_high
sums_high[sums_high$child !="C23",] -> sums_high
as.character(sums_high$source)->sums_high$source
sums_high$source[ sums_high$speakerID %in% c("FA2","FA3")] <- "adult" #create  female adults cats
sums_high$source[ sums_high$speakerID %in% c("MA1","MA2") ] <- "adult" #create  male adults cats
sums_high$source[ sums_high$speakerID %in% c("UC1","UC2") ] <- "children" #create  children cats
sums_high$source[ sums_high$speakerID %in% c("FA1") ] <- "MFV" #create  main female voice  cats
sums_high$source[ sums_high$speakerID %in% c("SP") ] <- "SP"
sums_high$source[ sums_high$speakerID %in% c("XOL") ] <- "XOL"
sums_high$source[ sums_high$speakerID %in% c("Noise") ] <- "Noise"
sums_high$source[ sums_high$speakerID %in% c("CHI") ] <- "CHI"
sums_high$n_of_siblings <- sums_high$n_of_siblings -1
#column created for chronological graphical representations
sums_high$child_age=paste0(sums_high$age_mo, sums_high$child)
sums_high$child_age[sums_high$child=="C13"] <- "06C13"
sums_high$child_age[sums_high$child=="C14"] <- "08C14"
sums_high$child_age[sums_high$child=="C25"] <- "08C25"
#reduce the dataset to the vars that go into the regression, for clarity
subset(sums_high,source %in% include )->incdat_high
subset(sums_high,source %in% include & cds %in% T)->incdat_CDS_high
#sum overall
aggregate(incdat_high$norm_totdur,by=list(incdat_high$File, incdat_high$key, incdat_high$child, incdat_high$mot, incdat_high$date, incdat_high$age_mo, incdat_high$sex, incdat_high$n_of_siblings, incdat_high$oder_of_birth,incdat_high$min_coded, incdat_high$agecat, incdat_high$child_age),sum)->bigsum_high
colnames(bigsum_high)<-c("File","key","child","mot","date","age_mo","sex","n_of_siblings","oder_of_birth","min_coded", "agecat", "child_age", "tot")
bigsum_high[,c("tot")]=bigsum_high[,c("tot")]*60
bigsum_high$age_yo = bigsum_high$age_mo / 12
bigsum_high$age_c = bigsum_high$age_mo - mean(bigsum_high$age_mo)
#sum overall but only CD
aggregate(incdat_CDS_high$norm_totdur,by=list(incdat_CDS_high$File, incdat_CDS_high$key, incdat_CDS_high$child, incdat_CDS_high$mot, incdat_CDS_high$date, incdat_CDS_high$age_mo, incdat_CDS_high$sex, incdat_CDS_high$n_of_siblings, incdat_CDS_high$oder_of_birth,incdat_CDS_high$min_coded, incdat_CDS_high$agecat, incdat_CDS_high$child_age),sum)->bigsum_CD_high
colnames(bigsum_CD_high)<-c("File","key","child","mot","date","age_mo","sex","n_of_siblings","oder_of_birth","min_coded", "agecat","child_age", "tot")
bigsum_CD_high[,c("tot")]=bigsum_CD_high[,c("tot")]*60
bigsum_CD_high$age_yo = bigsum_CD_high$age_mo / 12
bigsum_CD_high$age_c = bigsum_CD_high$age_mo - mean(bigsum_CD_high$age_mo)
merge(x=bigsum_CD_high,y = bigsum_high[ ,c("tot", "key")], by="key", all.x=T,all.y=F)->bigsum_CD_high
bigsum_CD_high$perc_cds=(bigsum_CD_high$tot.x/bigsum_CD_high$tot.y)*100
bigsum_CD_high$oh <- bigsum_CD_high$tot.y - bigsum_CD_high$tot.x
#tot.x is CDS total and tox.y is overall total
#sum each source separately
aggregate(incdat_high$norm_totdur,by=list(incdat_high$File, incdat_high$key, incdat_high$child, incdat_high$mot, incdat_high$date, incdat_high$age_mo, incdat_high$sex, incdat_high$n_of_siblings, incdat_high$oder_of_birth,incdat_high$min_coded, incdat_high$source, incdat_high$agecat,incdat_high$child_age),sum)->bysource_high
colnames(bysource_high)<-c("File","key","child","mot","date","age_mo","sex","n_of_siblings","oder_of_birth","min_coded", "source", "agecat", "child_age","tot")
bysource_high[,c("tot")]=bysource_high[,c("tot")]*60
bysource_high$age_c = bysource_high$age_mo - mean(bysource_high$age_mo)
#do the same for CD
aggregate(incdat_CDS_high$norm_totdur,by=list(incdat_CDS_high$File, incdat_CDS_high$key, incdat_CDS_high$child, incdat_CDS_high$mot, incdat_CDS_high$date, incdat_CDS_high$age_mo, incdat_CDS_high$sex, incdat_CDS_high$n_of_siblings, incdat_CDS_high$oder_of_birth,incdat_CDS_high$min_coded, incdat_CDS_high$source, incdat_CDS_high$agecat,incdat_CDS_high$child_age),sum)->bysource_cd_high
colnames(bysource_cd_high)<-c("File","key","child","mot","date","age_mo","sex","n_of_siblings","oder_of_birth","min_coded", "source", "agecat","child_age","tot.x")
bysource_cd_high[,c("tot.x")]=bysource_cd_high[,c("tot.x")]*60
bysource_cd_high$age_c = bysource_cd_high$age_mo - mean(bysource_cd_high$age_mo)
bysource_cd_high <- cbind(bysource_cd_high, bysource_high[,14, drop=FALSE])
bysource_cd_high$oh <- bysource_cd_high$tot - bysource_cd_high$tot.x
#and a table that has both CD and overall for the graphs
aggregate(incdat_high$norm_totdur,by=list(incdat_high$File, incdat_high$key, incdat_high$child, incdat_high$mot, incdat_high$date, incdat_high$age_mo, incdat_high$sex, incdat_high$n_of_siblings, incdat_high$oder_of_birth,incdat_high$min_coded, incdat_high$source, incdat_high$cds,  incdat_high$agecat, incdat_high$child_age), sum)->forsourcegraphs.lib
colnames(forsourcegraphs.lib)<-c("File","key","child","mot","date","age_mo","sex","n_of_siblings","oder_of_birth","min_coded", "source", "cds", "agecat","child_age","tot")
outt_high <- bigsum_CD_high[bigsum_CD_high$child !="C07",]
out_high<- bysource_cd_high[bysource_cd_high$child !="C07",]
s36mo_bigsum_high  <- bigsum_CD_high[bigsum_CD_high$age_mo <= 36,]
s36mo_forsource_high <- forsourcegraphs.lib[forsourcegraphs.lib$age_mo <=  36,]
s36mo_bysource_high <- bysource_cd_high[bysource_cd_high$age_mo <=  36,]
library(lmerTest)
library(effects)
