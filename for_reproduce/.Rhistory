library(dplyr)
library(tidyr)
library(googlesheets4)
###########Sesotho analysis starts here
lang<-"Sesotho"
langf<-"French"
path="../resultspeerspeech/"
#reads demuth corpus and counts utterances per speaker
#demuth <-read_sheet("https://docs.google.com/spreadsheets/d/1U-YheTr9fpi844p3pLSFujJOYAAG4BpJTv4Wn6Ki5JM/edit#gid=1937482996") loads from googlesheets
demuth<-read.csv(file="../for_reproduce/sesotho_CDS.csv", header=TRUE)
#add keychild and session columns (based on childes sessions)
demuth$keychild <- NA
demuth$keychild[demuth$session_id %in% c(2414:2458)] <- "Hlobohang"
demuth$keychild[demuth$session_id %in% c(2459:2503)] <- "Litlhare"
demuth$keychild[demuth$session_id %in% c(2504:2542)] <- "Neuoe"
demuth$session <- paste(demuth$keychild,demuth$session_CHILDES, sep="-")
demuth<-subset(demuth, !(demuth$speaker_role_raw=="Target_Child")) #remove target child utterances
#verify annotation matching
demuthSecondAnnotations<-subset(demuth, !(demuth$annotation2==""))
length(which(demuthSecondAnnotations$Diff_annotations=="DIFFER"))/nrow(demuthSecondAnnotations)
#how much due to uncertainty
differing<-subset(demuthSecondAnnotations, (demuthSecondAnnotations$Diff_annotations=="DIFFER"))
nquestions<-nrow(subset(differing, differing$annotation1=="?"))+ nrow(subset(differing, differing$annotation2=="?"))
nquestions/nrow(differing)
#speaker column
demuth$speaker <- NA
demuth$speaker[demuth$speaker_role_raw == "Mother"] <- "mother"
demuth$speaker[demuth$speaker_role_raw == "Investigator"] <- "investigator"
demuth$speaker[grep("Sister|Brother|Sibling|Child|Playmate|child|Teenager|Cousin", demuth$speaker_role_raw)]  <- "child"
demuth$speaker[grep("Adult|Uncle|Grandmother|Family_Friend|Visitor|Aunt|Father", demuth$speaker_role_raw)]  <- "adult"
demuth$speaker[grep("Target", demuth$speaker_role_raw)] <- "Target_Child"
#Sum the number of utterances per speaker category and keychild
aggregate(demuth$utterance_id,by=list( demuth$speaker, demuth$keychild, demuth$session),length )->sum_demuth
colnames(sum_demuth) <- c("speaker", "keychild", "session", "nb_uttpersession")
#write.table(sum_demuth, file=paste0(path, "sesotho_speakers.txt"), row.names=F, col.names=T,  quote=F)
demuth<-subset(demuth, !(demuth$speaker=="investigator")) #remove inv utterances
#measure percentage per speaker
total<-aggregate( sum_demuth$nb_uttpersession, by=list(sum_demuth$session), FUN=sum)
largetotal<-aggregate( sum_demuth$nb_uttpersession, by=list(sum_demuth$keychild), FUN=sum)
names(total)<-c("session", "totalofsession")
names(largetotal)<-c("keychild", "largetotalperchild")
sum_demuth<-merge(x=total, y=sum_demuth, by.x="session", by.y="session", all.x=TRUE, sort=TRUE)
sum_demuth<-merge(x=largetotal, y=sum_demuth, by.x="keychild", by.y="keychild", all.x=TRUE, sort=TRUE)
#SAVE INFO OF SPEAKERS IN FILE, TABLE 1 IN MANUSCRIPT
sum_demuth$percentageperSessionSpeakerChild<-NA
sum_demuth$percentageperSessionSpeakerChild<-sum_demuth$nb_uttpersession/sum_demuth$totalofsession*100
average<-aggregate(sum_demuth$percentageperSessionSpeakerChild, by=list(sum_demuth$keychild, sum_demuth$speaker), function(x) cbind(round(mean(x),2), round(sd(x),2)) )
names(average)<-c("keychild", "speaker", "averagepersession")
sumspeaker<-aggregate(sum_demuth$nb_uttpersession, by=list(sum_demuth$keychild, sum_demuth$speaker), function(x) sum(x))
names(sumspeaker)<-c("keychild", "speaker", "sumperSpeakerChild")
sum_demuth<-merge(x=average, y=sum_demuth, by.x=c("keychild", "speaker"), by.y=c("keychild", "speaker"), all.x=TRUE, sort=TRUE)
sum_demuth<-merge(x=sumspeaker, y=sum_demuth, by.x=c("keychild", "speaker"), by.y=c("keychild", "speaker"), all.x=TRUE, sort=TRUE)
sum_demuth$percentageperSpeakerChild<-sum_demuth$sumperSpeakerChild/sum_demuth$largetotalperchild*100
write.table(sum_demuth, file=paste0(path, "sum_demuth.txt"), row.names=F, col.names=T,  quote=F)
path="../derived/"
write.table(sum_demuth, file=paste0(path, "sum_demuth.txt"), row.names=F, col.names=T,  quote=F)
path="../for_reproduce/derived/"
write.table(sum_demuth, file=paste0(path, "sum_demuth.txt"), row.names=F, col.names=T,  quote=F)
#Create table with speaker average across sessions
#colnames(sum_demuth)[3] <- "mean"
table1<-unique(data.frame(sum_demuth$averagepersession, sum_demuth$keychild, sum_demuth$speaker))
colnames(table1)<- c("mean", "sd", "keychild", "speaker")
table1<-table1 %>% unite("mean_sd", mean:sd, )
wide_table1 <- table1 %>% spread(speaker, mean_sd)
#Create table with speaker percentage overall
table2<-unique(data.frame(sum_demuth$percentageperSpeakerChild, sum_demuth$keychild, sum_demuth$speaker))
colnames(table2)<- c("percentage", "keychild", "speaker")
demuth_backup <- demuth # keep the original file before subsetting
demuth<-subset(demuth, !(demuth$speaker=="Investigator")) #remove investigator utterances
nrow(demuth) #69573 including keychild vocs
#demuth<-subset(demuth, !(demuth$annotation1=="?")) # 69573 - 17159 (NAs) - 3289 (?) = 49125
totaldemuth<-nrow(demuth) #38565
aggregate(demuth$utterance_id,by=list(demuth$annotation1,  demuth$speaker, demuth$keychild,  demuth$session),FUN=length )->sum_demuth_addressee
colnames(sum_demuth_addressee) <- c("addresse", "speaker", "keychild", "session", "nb_utt")
#matches addressee with speaker roles (especially for non-child directed)
speaker_info_demuth<- as.data.frame(unique(demuth %>%select(uniquespeaker_id_fk, speaker_role_raw)))
colnames(speaker_info_demuth)[colnames(speaker_info_demuth)=="speaker_role_raw"] <- "role_adressee"
merged_speaker_info_demuth<-merge(x=demuth, y=speaker_info_demuth, by.x="annotation1", by.y="uniquespeaker_id_fk", all.x=TRUE, sort=TRUE)
#classify the roleless adressees
merged_speaker_info_demuth$annotation1<- as.character(merged_speaker_info_demuth$annotation1)
merged_speaker_info_demuth$role_adressee <- as.character(merged_speaker_info_demuth$role_adressee)
merged_speaker_info_demuth$role_adressee[merged_speaker_info_demuth$annotation1 %in% c ("Bakwena","Chalowena","Chelwane","Denetu","Lekhabe","Likhapa","Likhapa\n","Likhapha","Linono\n","Makhotoko","Malibata","Masepenya","Masethulo","Matule","Matumo","Ndate","Nkeletseng","Ntate","NTSOAKI!","Patric","Patrick","Sentsowa","Tsanapu","Tsenepu","Tsenethu","Tsenethu\n", "NTSOAKI !")] <- "Unknown" # this is for all the addresses with names with dont know what they are
merged_speaker_info_demuth$role_adressee[merged_speaker_info_demuth$annotation1 %in% c("C","N","83","88", "94","97","?","?1","0","96")] <- "Unknown" # these are probably typos
merged_speaker_info_demuth$role_adressee[merged_speaker_info_demuth$annotation1 %in% c("16413","16896")] <- "Mother" # these are probably typos
merged_speaker_info_demuth$role_adressee[merged_speaker_info_demuth$annotation1 %in% c("16901", '883')] <- "Investigator" # these are probably typos
merged_speaker_info_demuth$role_adressee[merged_speaker_info_demuth$annotation1 %in% c("C","N")] <- "Unknown" # these letters idk what they mean
#classify other weird stuff
merged_speaker_info_demuth$role_adressee[merged_speaker_info_demuth$annotation1 %in% c("O", "957")] <- "Other child"
merged_speaker_info_demuth$role_adressee[merged_speaker_info_demuth$annotation1 %in% c("DOG", "PET")] <- "Animals"
merged_speaker_info_demuth$role_adressee[merged_speaker_info_demuth$annotation1 %in% c("SELF")] <- "Self"
merged_speaker_info_demuth$role_adressee[merged_speaker_info_demuth$annotation1 %in% c("MIX")] <- "Mix"
merged_speaker_info_demuth$role_adressee[merged_speaker_info_demuth$annotation1 %in% c("A")] <- "Adult"
#utterances addressed to keychild
merged_speaker_info_demuth$role_adressee[merged_speaker_info_demuth$annotation1 %in% c("1", "882")] <- "Keychild"
#CHECK THAT ALL ADRESSEES ARE CLASSIFIED (no NAs)
summary(as.factor(merged_speaker_info_demuth$role_adressee))
merged_speaker_info_demuth<-subset(merged_speaker_info_demuth, !(merged_speaker_info_demuth$role_adressee=="Investigator"))
merged_speaker_info_demuth<-subset(merged_speaker_info_demuth, !(merged_speaker_info_demuth$role_adressee=="Unknown"))
#CHECK THAT ALL ADRESSEES ARE CLASSIFIED (no NAs)
summary(as.factor(merged_speaker_info_demuth$role_adressee))
#create register column
merged_speaker_info_demuth$register <- NA
merged_speaker_info_demuth$register[merged_speaker_info_demuth$role_adressee == "Investigator"] <- "Investigator"
merged_speaker_info_demuth$register[grep("Sister|Brother|Sibling|Playmate|Teenager|Cousin|Other child", merged_speaker_info_demuth$role_adressee)]  <- "OCDS"
merged_speaker_info_demuth$register[grep("Adult|Uncle|Grandmother|Father|Mother", merged_speaker_info_demuth$role_adressee)]  <- "ADS"
merged_speaker_info_demuth$register[grep("Keychild", merged_speaker_info_demuth$role_adressee)] <- "CDS"
merged_speaker_info_demuth$register[grep("Animals|Mix|Unknown|Self", merged_speaker_info_demuth$role_adressee)]  <- "unclassified"
aggregate(merged_speaker_info_demuth$utterance_id,by=list(merged_speaker_info_demuth$register, merged_speaker_info_demuth$keychild, merged_speaker_info_demuth$session),FUN=length )->sum_demuth_register
colnames(sum_demuth_register) <- c("register", "keychild","session", "nb_utt")
demuth_adult_directed<-subset(merged_speaker_info_demuth, (merged_speaker_info_demuth$register=="ADS"))
demuth_otherchild_directed<-subset(merged_speaker_info_demuth, (merged_speaker_info_demuth$register=="OCDS"))
demuth_keychild_directed<-subset(merged_speaker_info_demuth, (merged_speaker_info_demuth$register=="CDS"))
demuth_unclassified_directed<-subset(merged_speaker_info_demuth, (merged_speaker_info_demuth$register=="unclassified"))
demuth_investigator_directed<-subset(merged_speaker_info_demuth, (merged_speaker_info_demuth$register=="Investigator"))
#Aggregate
aggregate(demuth_adult_directed$utterance_id,by=list(demuth_adult_directed$speaker, demuth_adult_directed$keychild),length )->sum_demuth_ADS
colnames(sum_demuth_ADS) <- c( "speaker", "keychild", "nb_utt")
aggregate(demuth_otherchild_directed$utterance_id,by=list(demuth_otherchild_directed$speaker, demuth_otherchild_directed$keychild),length )->sum_demuth_OCDS
colnames(sum_demuth_OCDS) <- c( "speaker", "keychild", "nb_utt")
#subset all utterances marked as ADS & OCDS
demuth_ad_directed_utts<- as.data.frame(demuth_adult_directed %>%select(utterance))
demuth_oc_directed_utts<- as.data.frame(demuth_otherchild_directed %>%select(utterance))
demuth_c_directed_utts<- as.data.frame(demuth_keychild_directed %>%select(utterance))
#export all ADS utterance into a text file
#write.table(demuth_ad_directed_utts, file=paste0(path, "Sesothoadultdirected.txt"), row.names=F, col.names=T,  quote=F)
#write.table(demuth_oc_directed_utts, file=paste0(path, "Sesothootherchilddirected.txt"), row.names=F, col.names=T,  quote=F)
#write.table(demuth_c_directed_utts, file=paste0(path, "/Sesothochilddirected.txt"), row.names=F, col.names=T,  quote=F)
#percentage of adult directed speech vs total annotated
length(demuth_adult_directed$utterance)/totaldemuth *100 #5.3
length(demuth_otherchild_directed$utterance)/totaldemuth *100 #11.9
total_reg<-aggregate(sum_demuth_register$nb_utt, by=list(sum_demuth_register$session), FUN=sum)
names(total_reg)<-c("session", "total")
sum_demuth_register<-merge(x=total_reg, y=sum_demuth_register, by.x="session", all.x=TRUE, sort=TRUE)
largetotal_reg<-aggregate( sum_demuth_register$nb_utt, by=list(sum_demuth_register$keychild), FUN=sum)
names(largetotal_reg)<-c("keychild", "largetotalperchild")
sum_demuth_register<-merge(x=largetotal_reg, y=sum_demuth_register, by.x="keychild", by.y="keychild", all.x=TRUE, sort=TRUE)
sum_demuth_register$percentageperSessionRegisterChild<-NA
sum_demuth_register$percentageperSessionRegisterChild<-sum_demuth_register$nb_utt/sum_demuth_register$total*100
average<-aggregate(sum_demuth_register$percentageperSessionRegisterChild, by=list(sum_demuth_register$keychild, sum_demuth_register$register), function(x) cbind(round(mean(x),2), round(sd(x),2)) )
names(average)<-c("keychild", "register", "averagepersession")
#SAVE INFO OF REGISTERS IN FILE, TABLE 2 IN MANUSCRIPT
sumregister<-aggregate(sum_demuth_register$nb_utt, by=list(sum_demuth_register$keychild, sum_demuth_register$register), function(x) sum(x))
names(sumregister)<-c("keychild", "register", "sumperRegisterChild")
sum_demuth_register<-merge(x=sumregister, y=sum_demuth_register, by.x=c("keychild", "register"), all.x=TRUE, sort=TRUE)
sum_demuth_register$percentageperRegisterChild<-sum_demuth_register$sumperRegisterChild/sum_demuth_register$largetotalperchild*100
write.table(sum_demuth_register, file=paste0(path, "sum_demuth_register_noinv.txt"), row.names=F, col.names=T,  quote=F)  #MANUSCRIPT TABLE 1
#colnames(sum_demuth_register)[3] <- "mean"
table2<-unique(data.frame(sum_demuth_register$averagepersession, sum_demuth_register$keychild, sum_demuth_register$register))
View(table2)
View(sum_demuth_register)
View(sumregister)
View(sum_demuth_register)
